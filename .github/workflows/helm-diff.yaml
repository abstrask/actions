# https://github.com/recoord/flux-infrastructure/blob/dev/.github/workflows/update-crds.yml
# https://github.com/recoord/core-devops-engine-k8s-manifests/blob/main/.github/workflows/diff.yml

on:
  - pull_request_target
jobs:
  helm-diff:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.ref }}
        fetch-depth: 2  # Fetch enough history to get the parent commit

    - uses: alexellis/arkade-get@master
      with:
        helm: latest
        yq: latest

    - name: Set up Git
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"

    - name: Fetch parent commit
      run: |
        # Get the parent commit SHA of the current PR
        PARENT_SHA=$(git rev-parse HEAD^1)
        echo "PARENT_SHA=$PARENT_SHA" >> $GITHUB_ENV
        echo $PARENT_SHA

    - name: Get changed Helm files
      id: changed-files-helm
      uses: tj-actions/changed-files@v44
      with:
        files: |
          helm-charts/*/helm.yaml

    - id: run-diff
      name: Run diff
      # continue-on-error: true
      # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
      env:
        PARENT_SHA: ${{ env.PARENT_SHA }}
        MODIFIED_HELM_FILES: ${{ steps.changed-files-helm.outputs.modified_files }}
      run: |
        EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
        echo "DIFF_OUT<<$EOF" >> "$GITHUB_OUTPUT"

        echo "# Helm diffs" >> "$GITHUB_OUTPUT"
        echo "Parent: ``${PARENT_SHA}``"" >> "$GITHUB_OUTPUT"

        diff --version >> "$GITHUB_OUTPUT"
        diff --help >> "$GITHUB_OUTPUT"

        for helm_file in ${MODIFIED_HELM_FILES}; do
          after_name=$(yq '. | select(.kind == "HelmRelease").metadata.name' "${helm_file}")
          after_namespace=$(yq '. | select(.kind == "HelmRelease").metadata.namespace' "${helm_file}")
          after_version=$(yq '. | select(.kind == "HelmRelease") | .spec.chart.spec.version' "${helm_file}")
          after_url=$(yq '. | select(.kind == "HelmRepository") | .spec.url' "${helm_file}")
          after_chart=$(yq '. | select(.kind == "HelmRelease") | .spec.chart.spec.chart' "${helm_file}")

          after_values=$(yq '. | select(.kind == "HelmRelease").spec.values' "${helm_file}")
          after_template=$(helm template "${after_name}" -n "${after_namespace}" "${after_chart}" --repo "${after_url}" --version "${after_version}" -f <(echo "${after_values}"))
          after_template_clean=$(yq -P 'sort_keys(..) comments=""' <(echo "${after_template}"))
          #yq -P 'sort_keys(..) comments=""' <(echo "${after_template}") > ./after_clean.yaml

          before_helm_content=$(git show $PARENT_SHA:$helm_file)
          before_name=$(yq '. | select(.kind == "HelmRelease").metadata.name' <(echo "${before_helm_content}"))
          before_namespace=$(yq '. | select(.kind == "HelmRelease").metadata.namespace' <(echo "${before_helm_content}"))
          before_version=$(yq '. | select(.kind == "HelmRelease") | .spec.chart.spec.version' <(echo "${before_helm_content}"))
          before_url=$(yq '. | select(.kind == "HelmRepository") | .spec.url' <(echo "${before_helm_content}"))
          before_chart=$(yq '. | select(.kind == "HelmRelease") | .spec.chart.spec.chart' <(echo "${before_helm_content}"))

          before_values=$(yq '. | select(.kind == "HelmRelease").spec.values' <(echo "${before_helm_content}"))
          before_template=$(helm template "${before_name}" -n "${before_namespace}" "${before_chart}" --repo "${before_url}" --version "${before_version}" -f <(echo "${before_values}"))
          before_template_clean=$(yq -P 'sort_keys(..) comments=""' <(echo "${before_template}"))
          #yq -P 'sort_keys(..) comments=""' <(echo "${before_template}") > ./before_clean.yaml

          # diff=$(diff --strip-trailing-cr <(echo "${before_template_clean}") <(echo "${after_template_clean}") | head -n 200)
          diff="test"

          echo >> "$GITHUB_OUTPUT"
          echo "## ${helm_file}" >> "$GITHUB_OUTPUT"
          echo "### Before" >> "$GITHUB_OUTPUT"
          echo '```' >> "$GITHUB_OUTPUT"
          echo "${before_template_clean}" >> "$GITHUB_OUTPUT"
          #cat ./before_clean.yaml >> "$GITHUB_OUTPUT"
          echo '```' >> "$GITHUB_OUTPUT"
          echo "### After" >> "$GITHUB_OUTPUT"
          echo '```' >> "$GITHUB_OUTPUT"
          echo "${after_template_clean}" >> "$GITHUB_OUTPUT"
          #cat ./after_clean.yaml >> "$GITHUB_OUTPUT"
          echo '```' >> "$GITHUB_OUTPUT"
          echo "### Diff" >> "$GITHUB_OUTPUT"
          echo '```' >> "$GITHUB_OUTPUT"
          # diff <(echo "${before_template_clean}") <(echo "${after_template_clean}") >> "$GITHUB_OUTPUT"
          # diff ./before_clean.yaml ./after_clean.yaml >> "$GITHUB_OUTPUT"
          # echo "${diff}" >> "$GITHUB_OUTPUT"
          echo '```' >> "$GITHUB_OUTPUT"
        done
        echo "$EOF" >> "$GITHUB_OUTPUT"

    - id: pr-comment
      name: Add PR comment
      uses: mshick/add-pr-comment@v2
      if: contains(fromJSON('["pull_request_target"]'), github.event_name)
      with:
        message-id: stag
        refresh-message-position: true
        message: |
          ${{ steps.run-diff.outputs.DIFF_OUT }}
